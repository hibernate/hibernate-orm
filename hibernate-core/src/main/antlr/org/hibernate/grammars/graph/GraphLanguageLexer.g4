lexer grammar GraphLanguageLexer;

@header {
/*
 * SPDX-License-Identifier: Apache-2.0
 * Copyright Red Hat Inc. and Hibernate Authors
 */
package org.hibernate.grammars.graph;
}

@members {
/*
 * Lexer for the Hibernate EntityGraph Language
 *
 * It is generated by Antlr via the lexer grammar file `GraphLanguageLexer.g4`
 */
}

channels {
  WHITESPACE_CHANNEL
}

WS : ( ' ' | '\t' | '\f' | EOL ) -> channel(WHITESPACE_CHANNEL);

fragment EOL	: [\r\n]+;

COLON: ':';

COMMA: ',';

DOT: '.';

LPAREN: '(';

RPAREN: ')';

/**
 * In this grammar, basically any string since we (atm) have no keywords
 */
ATTR_NAME : ATTR_NAME_START NAME_CONTINUATION*;

TYPE_NAME : TYPE_NAME_START NAME_CONTINUATION*;

fragment NON_ALPHANUM_EXTENTION
	:    '_'
    |    '$'
    // HHH-558 : Allow unicode chars in identifiers
    //|    '\u0080'..'\ufffe'
    ;

fragment ATTR_NAME_START
    :    NON_ALPHANUM_EXTENTION
    |    'a'..'z'
    ;

fragment TYPE_NAME_START
    :    NON_ALPHANUM_EXTENTION
    |    'A'..'Z'
    ;

fragment NAME_CONTINUATION
    :    NON_ALPHANUM_EXTENTION
    |    'a'..'z'
    |    'A'..'Z'
    |    '0'..'9'
    ;
