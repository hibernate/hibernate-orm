<?xml version="1.0"?>
<!--
  ~ SPDX-License-Identifier: Apache-2.0
  ~ Copyright Red Hat Inc. and Hibernate Authors
  -->
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<!--
    This mapping demonstrates the use of database-level cascade
    entity removal with composite ids mapped using key-many-to-one
    feature. Essentially a composite id where part
    of the composition is a foreign-key to another entity.
-->

<hibernate-mapping package="org.hibernate.orm.test.keymanytoone.unidir.ondelete">

    <class name="Customer" table="CUSTOMERS">
        <id name="id" column="ID" type="long">
            <generator class="increment" />
        </id>
        <property name="name" column="NAME" type="string" />
    </class>

    <class name="Order" table="ORDERS">
        <!-- Unidirectional relation. -->
        <composite-id name="id" class="Order$Id">
            <key-many-to-one name="customer" column="CUSTOMER_ID" class="Customer" lazy="false" on-delete="cascade" />
            <key-property name="number" column="ORDER_NUMBER" type="long" />
        </composite-id>
        <property name="item" column="ITEM_DESCRIPTION" type="string" />
    </class>

</hibernate-mapping>
