<?xml version="1.0"?>
<!--
  ~ SPDX-License-Identifier: Apache-2.0
  ~ Copyright Red Hat Inc. and Hibernate Authors
  -->
<!DOCTYPE hibernate-mapping PUBLIC
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<!--
     
-->

<hibernate-mapping package="org.hibernate.orm.test.map">
	
	<class name="Group" table="groups_">
		<id name="name"/>
		<map name="users" cascade="persist" table="group_user">
			<key column="groupName"/>
			<map-key formula="lower(personName)" type="string"/>
			<many-to-many column="personName" class="User"/>
		</map>
	</class>
	
	<class name="User" table="users">
		<id name="name"/>
		<property name="password" column="pw"/>
		<map name="session" cascade="persist,merge,delete,delete-orphan">
			<key column="userName" not-null="true"/>
			<map-key formula="lower(name)" type="string"/>
			<one-to-many class="SessionAttribute"/>
		</map>
	</class>
	
	<class name="SessionAttribute" table="session_attributes">
		<id name="id" access="field">
			<generator class="native"/>
		</id>
		<property name="name" not-null="true" update="false"/>
		<property name="stringData"/>
		<property name="objectData"/>
	</class>
	
	<sql-query name="userSessionData">
		<return alias="u" class="User"/>
		<return-join alias="s" property="u.session"/>
		select 
			lower(u.name) as {u.name}, lower(u.pw) as {u.password},
			lower(s.userName) as {s.key}, lower(s.name) as {s.index}, s.id as {s.element}, 
			{s.element.*}
		from users u 
		join session_attributes s on lower(s.userName) = lower(u.name)
		where u.name like :uname
	</sql-query>	
	

</hibernate-mapping>
