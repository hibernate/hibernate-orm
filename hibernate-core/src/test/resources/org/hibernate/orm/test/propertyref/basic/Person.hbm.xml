<?xml version="1.0"?>
<!--
  ~ SPDX-License-Identifier: Apache-2.0
  ~ Copyright Red Hat Inc. and Hibernate Authors
  -->
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<!--

  Demonstrates the use of property-ref to map legacy data where
  foreign keys reference something other than the primary key of
  the associated entity. Here we show:

  (1) A one-to-one foreign key association (prefer primary key
      associations)

  (2) A bidirectional one-to-many association on a key that is
      not the primary key (prefer associations from foreign keys
      to primary keys)

-->

<hibernate-mapping package="org.hibernate.orm.test.propertyref.basic">

    <class name="Person" table="PROPREF_PERS">
        <id name="id">
            <generator class="increment"/>
        </id>
        <property name="name" length="100"/>
        <property name="userId" column="person_userid" length="8" unique="true" not-null="true"/>
        <one-to-one name="address" property-ref="person" cascade="all" fetch="join"/>
        <set name="accounts" inverse="true">
            <key column="userId" property-ref="userId"/>
            <one-to-many class="Account"/>
        </set>
        <bag name="systems" table="USER_SYSTEM" lazy="true" inverse="false" cascade="all">
            <key column="USER_ID" property-ref="userId" />
            <element type="string" column="SYSTEM_ID" />
        </bag>
    </class>

    <class name="Address" table="PROPREF_ADDR">
        <id name="id">
            <generator class="increment"/>
        </id>
        <property name="address" length="300"/>
        <property name="zip" length="5"/>
        <property name="country" length="25"/>
        <many-to-one name="person" unique="true" not-null="true"/>
    </class>

    <class name="Account" table="PROPREF_ACCT">
        <id name="accountId" length="32">
            <generator class="uuid.hex"/>
        </id>
        <many-to-one name="user" column="userId" property-ref="userId"/>
        <property name="type" column="`type`" not-null="true"/>
    </class>

    <class name="Group" table="PROPREF_GRP">
        <id name="name"/>
        <set name="users" table="PROPREF_USERGROUP" cascade="merge">
            <key column="groupName"/>
            <many-to-many column="userId" class="Person" property-ref="userId"/>
        </set>
    </class>

</hibernate-mapping>